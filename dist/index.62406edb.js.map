{"mappings":"AAAA,oDAAoD;AACpD,wDAAwD;AACxD,qBAAqB;AAErB,MAAM,kBAAkB,SAAS,cAAc;AAE/C,MAAM,UAAU,SAAU,CAAC;IACzB,OAAO,IAAI,QAAQ,SAAU,CAAC,EAAE,MAAM;QACpC,WAAW;YACT,OAAO,IAAI,MAAM,CAAC,qCAAqC,EAAE,EAAE,OAAO,CAAC;QACrE,GAAG,IAAI;IACT;AACF;AACA,sBAAsB;AACtB,uCAAuC;AAEvC,uCAAuC;AACvC,MAAM,aAAa;IACjB,IAAI;QACF,oBAAoB;QACpB,MAAM,MAAM,MAAM,MAAM;QACxB,MAAM,OAAO,MAAM,IAAI;QACvB,IAAI,CAAC,IAAI,IAAI,MAAM,IAAI,MAAM,CAAC,EAAE,KAAK,QAAQ,EAAE,EAAE,IAAI,OAAO,CAAC,CAAC;QAC9D,0BAA0B;QAC1B,iCAAiC;QACjC,sBAAsB;QACtB,IAAI,EAAC,MAAM,EAAC,GAAG,KAAK;QACpB,SAAS;YACP,IAAI,OAAO;YACX,OAAO,OAAO;YACd,WAAW,OAAO;YAClB,WAAW,OAAO;YAClB,OAAO,OAAO;YACd,UAAU,OAAO;YACjB,aAAa,OAAO;YACpB,aAAa,OAAO;QACtB;QACA,QAAQ,IAAI;QAEZ,sBAAsB;QACtB,MAAM,SAAS,CAAC;;uBAEG,EAAE,OAAO,MAAM,OAAO,EAAE,OAAO,MAAM;;oBAExC,EAAE,OAAO,MAAM;;;;;;;;;yEASsC,EAAE,OAAO,YAAY;;;;;;;wEAOtB,EAAE,OAAO,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAgC1E,EAAE,OAAO,YAAY,IAAI,CAAA;YACvB,OAAO,CAAC;;;;;sDAK4B,EAAE,IAAI,SAAS;;qDAEhB,EAAE,IAAI,KAAK;0BACtC,EAAE,IAAI,YAAY;;;kBAG1B,CAAC;QACH,GAAG,KAAK,IAAI;;;;;;;;8CAQkB,EAAE,OAAO,UAAU;;;;;oBAK7C,EAAE,OAAO,UAAU;;;;;;;;;IASnC,CAAC;QACD,gBAAgB,YAAY;QAC5B,gBAAgB,mBAAmB,cAAc;IACnD,EAAE,OAAO,KAAK;QACZ,MAAM;IACR;AACF;AAEA","sources":["src/js/controller.js"],"sourcesContent":["// import icons from '../img/icons.svg'; // Parcel 1\n// import icons from 'url:../img/icons.svg'; // Parcel 2\n// console.log(icons)\n\nconst recipeContainer = document.querySelector('.recipe');\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n// api documentation -\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\nconst showRecipe = async function () {\n  try {\n    // 1) Loading recipe\n    const res = await fetch('https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bcebc');\n    const data = await res.json();\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`)\n    // console.log(res, data);\n    // let recipe = data.data.recipe;\n    // using destructuring\n    let {recipe} = data.data;\n    recipe = {\n      id: recipe.id,\n      title: recipe.title,\n      publisher: recipe.publisher,\n      sourceUrl: recipe.source_url,\n      image: recipe.image_url,\n      servings: recipe.servings,\n      cookingTime: recipe.cooking_time,\n      ingredients: recipe.ingredients\n    }\n    console.log(recipe);\n\n    // 2) Rendering recipe\n    const markup = `\n      <figure class=\"recipe__fig\">\n            <img src= \"${recipe.image}\" alt=\"${recipe.title}\" class=\"recipe__img\" />\n            <h1 class=\"recipe__title\">\n              <span>${recipe.title}</span>\n            </h1>\n          </figure>\n  \n          <div class=\"recipe__details\">\n            <div class=\"recipe__info\">\n              <svg class=\"recipe__info-icon\">\n                <use href=\"src/img/icons.svg#icon-clock\"></use>\n              </svg>\n              <span class=\"recipe__info-data recipe__info-data--minutes\">${recipe.cookingTime}</span>\n              <span class=\"recipe__info-text\">minutes</span>\n            </div>\n            <div class=\"recipe__info\">\n              <svg class=\"recipe__info-icon\">\n                <use href=\"src/img/icons.svg#icon-users\"></use>\n              </svg>\n              <span class=\"recipe__info-data recipe__info-data--people\">${recipe.servings}</span>\n              <span class=\"recipe__info-text\">servings</span>\n  \n              <div class=\"recipe__info-buttons\">\n                <button class=\"btn--tiny btn--increase-servings\">\n                  <svg>\n                    <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n                  </svg>\n                </button>\n                <button class=\"btn--tiny btn--increase-servings\">\n                  <svg>\n                    <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n                  </svg>\n                </button>\n              </div>\n            </div>\n  \n            <div class=\"recipe__user-generated\">\n              <svg>\n                <use href=\"src/img/icons.svg#icon-user\"></use>\n              </svg>\n            </div>\n            <button class=\"btn--round\">\n              <svg class=\"\">\n                <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n              </svg>\n            </button>\n          </div>\n  \n          <div class=\"recipe__ingredients\">\n            <h2 class=\"heading--2\">Recipe ingredients</h2>\n            <ul class=\"recipe__ingredient-list\">\n                ${recipe.ingredients.map(ing => {\n                  return `\n                      <li class=\"recipe__ingredient\">\n                        <svg class=\"recipe__icon\">\n                          <use href=\"src/img/icons.svg#icon-check\"></use>\n                        </svg>\n                        <div class=\"recipe__quantity\">${ing.quantity}</div>\n                        <div class=\"recipe__description\">\n                          <span class=\"recipe__unit\">${ing.unit}</span>\n                          ${ing.description}\n                        </div>\n                      </li>\n                  `\n                }).join('')}\n            </ul>\n          </div>\n  \n          <div class=\"recipe__directions\">\n            <h2 class=\"heading--2\">How to cook it</h2>\n            <p class=\"recipe__directions-text\">\n              This recipe was carefully designed and tested by\n              <span class=\"recipe__publisher\">${recipe.publisher}</span>. Please check out\n              directions at their website.\n            </p>\n            <a\n              class=\"btn--small recipe__btn\"\n              href=\"${recipe.sourceUrl}\"\n              target=\"_blank\"\n            >\n              <span>Directions</span>\n              <svg class=\"search__icon\">\n                <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n              </svg>\n            </a>\n          </div>\n    `;\n    recipeContainer.innerHTML = '';\n    recipeContainer.insertAdjacentHTML('afterbegin', markup)\n  } catch (err) {\n    alert(err)\n  }\n}\n\nshowRecipe();\n"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}